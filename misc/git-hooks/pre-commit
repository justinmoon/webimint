#!/usr/bin/env bash

set -eo pipefail

# Revert `git stash` on exit
function revert_git_stash {
  >&2 echo "Unstashing uncommited changes..."
  git stash pop -q
}

set +e
git diff-files --quiet
is_unclean=$?
set -e

# Stash pending changes and revert them when script ends
if [ $is_unclean -ne 0 ]; then
  >&2 echo "Stashing uncommited changes..."
  git stash -q --keep-index
  trap revert_git_stash EXIT
fi

git_ls_files="$(git ls-files)"

>&2 echo "Checking *.nix files..."
# shellcheck disable=SC2046
nixpkgs-fmt --check $(echo "$git_ls_files" | grep -E '.*\.nix$')


>&2 echo "Checking Rust projects files..."
# Note: avoid `cargo fmt --all` so we don't need extra stuff in `ci` shell
# so that CI is faster
# shellcheck disable=SC2046
rustfmt --edition 2021 --check $(echo "$git_ls_files" | grep -E '.*\.rs$')


>&2 echo "Checking shell script files ..."
for path in $(echo "$git_ls_files" | grep -E '.*\.sh$')  ; do
  shellcheck --severity=warning "$path"
done

errors=""
for path in $(echo "$git_ls_files" | grep -v -E '.*\.(ods|ico|png)'); do
  # extra branches for clarity
  if [ ! -s "$path" ]; then
     # echo "$path is empty"
     true
  elif [ -z "$(tail -c 1 < "$path")" ]; then
     # echo "$path ends with a newline or with a null byte"
     true
  else
    echo "$path doesn't end with a newline" 1>&2
    errors="true"
  fi
done

if [ -n "$errors" ]; then
  exit 1
fi
